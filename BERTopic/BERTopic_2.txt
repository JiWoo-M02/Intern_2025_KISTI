# %%
from bertopic import BERTopic
import pandas as pd
import umap
import hdbscan
import spacy

# 1. CSV 데이터 불러오기
file_path = "C:/Users/MaengJiwoo/.vscode/KISTI-intern/2025_KISTI-intern/overlapped_entities.csv"
df = pd.read_csv(file_path, encoding="windows-1252")

# 2. entity_text 컬럼 추출
docs = df['entity_text'].astype(str).tolist()

# 3. (선택) 형태소 분석기 로딩 (영어 기준)
nlp = spacy.load("en_core_web_lg")

# 4. UMAP + HDBSCAN 모델 정의
umap_model = umap.UMAP(
    n_neighbors=15, 
    n_components=5, 
    metric="cosine"
    )

hdbscan_model = hdbscan.HDBSCAN(
    min_cluster_size=10, 
    metric="euclidean", 
    cluster_selection_method='eom',
    prediction_data=True
    )

# 5. BERTopic 모델 생성
topic_model = BERTopic(
    embedding_model="all-MiniLM-L6-v2",  # 영어 데이터일 경우
    umap_model=umap_model,
    hdbscan_model=hdbscan_model,
    min_topic_size=10,
    nr_topics="auto",
    verbose=True
    )

# 6. 모델 학습
topics, probs = topic_model.fit_transform(docs)

save_path = r"C:\Users\MaengJiwoo\.vscode\KISTI-intern\2025_KISTI-intern\BERTopic\my_model"
topic_model.save(save_path)

# 7. 토픽 정보 출력
print(topic_model.get_topic_info())

# 8. 대표 키워드 확인 (예: Topic 0)
print("\n[Topic 0 키워드]")
print(topic_model.get_topic(0))

# 9. 결과 시각화 (웹 브라우저에서 띄워짐)
topic_model.visualize_topics()
# topic_model.visualize_barchart()
# topic_model.visualize_heatmap()

# 10. 결과 저장 (선택)
df['topic'] = topics
df.to_csv("entity_topics.csv", index=False)


# %%
import plotly.io as pio
from bertopic import BERTopic

load_path = r"C:\Users\MaengJiwoo\.vscode\KISTI-intern\2025_KISTI-intern\BERTopic\my_model"
topic_model = BERTopic.load(load_path)

topics, probs = topic_model.transform(docs)

# 시각화 출력
pio.renderers.default = 'browser'
topic_model.visualize_topics()

# %%
